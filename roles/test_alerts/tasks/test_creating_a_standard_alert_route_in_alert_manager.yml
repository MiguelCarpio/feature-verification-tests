---
# Test creating an alert route in alertmanager following the procedure in: https://infrawatch.github.io/documentation/#creating-an-alert-route-in-alertmanager_assembly-advanced-features

# Pre-check: is the value of global.timeout = 5m in the alertmanager secret
  # TODO: put the patch into a file. and use --patch-file instead of -p OR slurp the file from files/
- name: "Patch the ServiceTelemetry object for the STF deployment"
  ansible.builtin.shell:
    cmd: |
      oc patch stf default --type merge -p '{"spec": {"alertmanagerConfigManifest": "apiVersion: v1\nkind: Secret\nmetadata:\n  name: 'alertmanager-default'\n  namespace: 'service-telemetry'\ntype: Opaque\nstringData:\n  alertmanager.yaml: |-\n    global:\n      resolve_timeout: 10m\n    route:\n      group_by: ['job']\n      group_wait: 30s\n      group_interval: 5m\n      repeat_interval: 12h\n      receiver: 'null'\n    receivers:\n    - name: 'null'\n"}}'
  changed_when: false
  register: cmd_output
  failed_when: cmd_output.rc != 0

- debug: var=cmd_output

  # oc get secret alertmanager-default -o go-template='{{index .data "alertmanager.yaml" | base64decode }}'
  # Can't use -o go-template becasue of the "{{" and "}}", which are mistaken for templating syntax.
  # The alertmanager.yaml key needed to be surrounded by [".."] because of the period in the key name.
- name: "Get the updated secret"
  ansible.builtin.shell:
    cmd: |
      oc get secret alertmanager-default -ojson | jq '.data | .["alertmanager.yaml"]'
  register: cmd_output
  changed_when: false

- debug: var=cmd_output

- name: "Decode the updated secret"
  set_fact:
    alertmanager_secret: "{{ cmd_output.stdout | b64decode | to_yaml }}"

- debug: var=alertmanager_secret

# Convert the output to yaml?
- set_fact:
    expected:
      global:
        resolve_timeout: 10m
      route:
        group_by: ['job']
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        receiver: 'null'
      receivers:
      - name: 'null'

- debug: var=expected
