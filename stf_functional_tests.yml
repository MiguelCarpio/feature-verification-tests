#!usr/bin/env ansible-playbook
---
- name: "Create output file on undercloud machine"
  hosts: undercloud-0
  gather_facts: false
  vars:
    output_file: stf_test_run_results.txt
  tasks:
      - name: Delete old file if existing
        file:
          path: "{{ output_file }}"
          state: absent
        ignore_errors: true


      - name: Create output file
        file:
          path: "{{ output_file }}"
          mode: "u=rw,g=r,o=r"
          state: touch

- name: "Check that collectd is running and generating any metrics"
  hosts: overcloud_nodes
  become: true
  tags:
    - collectd-write-qdr-edge-only
    - collectd-write-qdr-mesh
    - enable-stf
  tasks:
      - name: Check that collectd container is running.
        shell: podman ps
        register: podman_nodes

      - set_fact:
          status_string: "PASS"
        when: "'collectd' in podman_nodes['stdout']"

      - name: write to the file
        lineinfile:
          path: /home/stack/stf_test_run_results.txt
          line: "{{ inventory_hostname }} collectd container status: {{ status_string | default('FAIL') }}"
        delegate_to: "{{ groups['undercloud'] | first }}"

      - name: "[Test] Check for a non-zero number of metrics from collectd"
        shell: podman exec collectd collectdctl -s /var/run/collectd-socket listval | wc -l
        register: num_metrics
      - set_fact:
          metrics_status: "PASS"
        when: "num_metrics.stdout|int != 0"

      - name: write to the file
        lineinfile:
          path: /home/stack/stf_test_run_results.txt
          line: "{{ inventory_hostname }} collectd metrics status: {{ metrics_status | default('FAIL') }}"
        delegate_to: "{{ groups['undercloud'] | first }}"

      - name: "[Debug] Check for a non-zero number of metrics from collectd"
        debug:
           var: num_metrics

      - name: "[Setup] Get the value of some metric from collectd"
        shell: podman exec collectd collectdctl -s /var/run/collectd-socket listval | tail -1
        register: met

      - name: "[Debug] Get the value of some metric from collectd"
        debug:
          var: met

      - name: "[Test] Get the value of some metric from collectd"
        shell: podman exec collectd collectdctl -s /var/run/collectd-socket getval {{ met.stdout }}
        register: stat
        ignore_errors: yes
      - set_fact:
          metrics_value: "PASS"
        when: "stat.stdout_lines|length == 1"
        ignore_errors: yes

      - name: write to the file
        lineinfile:
          path: /home/stack/stf_test_run_results.txt
          line: "{{ inventory_hostname }} collectd metrics value status: {{ metrics_value | default('FAIL') }}"
        delegate_to: "{{ groups['undercloud'] | first }}"


- name: "Check that metrics_qdr container is running and receiving ANY messages."
  hosts: overcloud_nodes
  become: true
  tags:
    - collectd-write-qdr-edge-only
    - collectd-write-qdr-mesh
    - ceilometer-write-qdr-edge-only
    - ceilometer-write-qdr-mesh
    - enable-stf
  tasks:
      - name: Check that qdr container is running.
        shell: podman ps
        register: podman_nodes

      - set_fact:
          qdr_status: "PASS"
        when: "'metrics_qdr' in podman_nodes['stdout']"

      - name: write to the file
        lineinfile:
          path: /home/stack/stf_test_run_results.txt
          line: "{{ inventory_hostname }} metrics_qdr  container status: {{ qdr_status | default('FAIL') }}"
        delegate_to: "{{ groups['undercloud'] | first }}"

      - name: "[Setup] Get Qdr bus address"
        shell: |
            podman exec metrics_qdr cat /etc/qpid-dispatch/qdrouterd.conf | grep -5 listener | grep -3 "port: 5666" | grep host | awk '{print $2}'
        register: bus_addr

      - name: "[Debug] Get Qdr bus address"
        debug:
          var: bus_addr

      - name: "[Test] Get number of messages received"
        shell: podman exec metrics_qdr qdstat -b {{ bus_addr.stdout }}:5666 -g | grep "Ingress Count" | awk '{print $3}'
        register: num_rx
        ignore_errors: true
      - set_fact:
          messages_value: "PASS"
        when: num_rx.stdout|int != 0


      - name: write to the file
        lineinfile:
          path: /home/stack/stf_test_run_results.txt
          line: "{{ inventory_hostname }} metrics_qdr number of messages: {{ messages_value | default('FAIL') }}"
        delegate_to: "{{ groups['undercloud'] | first }}"
      - name: "[Debug] Get the number of messages received"
        debug:
          var: num_rx

- name: Count passed and failed tests
  hosts: undercloud-0
  gather_facts: false
  tasks:
      - name:
        shell: |
          echo "PASS: `less stf_test_run_results.txt | grep PASS -c`" >> stf_test_run_results.txt
          echo "FAIL: `less stf_test_run_results.txt | grep FAIL -c`" >> stf_test_run_results.txt
        register: command_result
        ignore_errors: true
        delegate_to: "{{ groups['undercloud'] | first }}"